AWSTemplateFormatVersion: 2010-09-09
Description: |
  This is for kittens..
Parameters:
  DomainName:
    Description: Domain name
    Type: string 
    Default: fatmakiraz.me 
  WebDomainName:
    Description: full domain name
    Type: srting 
    Default: kittens.fatmakiraz.me
  MyCertificate:
    Type: "AWS::CertificateManager::Certificate"
    CertificateAuthorityArn: 	arn:aws:acm:us-east-1:744261147378:certificate/d8f8e089-3224-425a-86ad-94fc0a536b2e
    DomainName: fatmakiraz.me #required
Resources:
# MyCertificate:
#   Type: "AWS::CertificateManager::Certificate"
#   Properties:
#     CertificateTransparencyLoggingPreference: DISABLED
#     DomainName: fatmakiraz.me #required
#     ValidationMethod: DNS
      # DomainValidationOptions:
      #   - DomainName: !Ref KittensDomainName
      #     HostedZoneId: !Ref DomainName


  MyCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        IPV6Enabled: true
        DefaultRootObject: index.html
        Origins:
          -
            Id: Origin01 # arbitrary identifier
            S3OriginConfig: {}
            DomainName: !Ref DomainName

        ViewerCertificate:
           AcmCertificateArn: 'MyCertificate'
           SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: Origin01
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: 'false'
            Headers:
              - Origin
              - CloudFront-Viewer-Country
            Cookies:
              Forward: none

  MyBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      BucketName: kittens.fatmakiraz.me
      ObjectLockEnabled: True 
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  SampleBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref BucketName
    PolicyDocument: 
      Statement: 
          Action: 
            - "s3:GetObject"
          Effect: "Allow"
          Resource: "arn:aws:s3:::kittens.fatmakiraz.me/*"
          Principal: "*" 
          Sid: "PublicReadGetObject"        
  
 
  
         

  Route53:
    Type: AWS::Route53::RecordSetGroup
    DependsOn: CloudFrontDistribution
    Properties:
      HostedZoneName: !Sub '${DomainName}.'  
      RecordSets:
      - Name: !Ref 'FullDomainName'
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          





Outputs:
  WebsiteURL:
    Value: !GetAtt [MYBucket, WebsiteURL]
    Description: URL for website hosted on S3


  

  

  