AWSTemplateFormatVersion: 2010-09-09
Description: |
  This is for kittens..
Parameters:
  IdHostedZoneName:
    Description: Z09574363NXONUG9MFL8A
    Type: AWS::Route53::HostedZone::Id 
  NameHostedZone:
    Description: kittens.fatmakiraz.me
    Type: AWS::Route53::HostedZone::Id
  MyCertificate:
    Type: "AWS::CertificateManager::Certificate"
    CertificateAuthorityArn: String
    DomainName: fatmakiraz.me #required
Resources:
# MyCertificate:
#   Type: "AWS::CertificateManager::Certificate"
#   Properties:
#     CertificateAuthorityArn: String
#     CertificateTransparencyLoggingPreference: DISABLED
#     DomainName: fatmakiraz.me #required
#     ValidationMethod: DNS

  # MyCloudFront:
  #   Type: AWS::CloudFront::Distribution
  #   Properties:
  #     DistributionConfig:
  #       Origins:
  #         - DomainName: !GetAtt
  #           - MyBucket
  #           - DomainName
  #       CacheBehaviors:
  #         AllowedMethods: 
  #           - GET
        #     - HEAD
        # Compress: Boolean
        # Supported HTTP Versions: HTTP/2 
        # Viewer Protocol Policy:
        #   - HTTP
        #   - HTTPS 
        # DefaultTTL: Double
        # Cookie Logging: Off
        #SSL Certificate: !Get MyCertificate
  MyCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        IPV6Enabled: true
        DefaultRootObject: index.html
        Origins:
          -
            Id: Origin01 # arbitrary identifier
            S3OriginConfig: {}
            DomainName: fatmakiraz.me

        ViewerCertificate:
           AcmCertificateArn: 'my-cer-id'
           SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: Origin01
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          MinTTL: 0
          DefaultTTL: 3600
          MaxTTL: 31536000
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: 'false'
            Headers:
              - Origin
              - CloudFront-Viewer-Country
            Cookies:
              Forward: none

  MyBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      BucketName: kittens.fatmakiraz.me
      ObjectLockEnabled: True 
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  SampleBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref BucketName
    PolicyDocument: 
      Statement: 
          Action: 
            - "s3:GetObject"
          Effect: "Allow"
          Resource: "arn:aws:s3:::example.com/*"
                - "/*"
          Principal: "*" 
          Sid: "PublicReadGetObject"        
  
 
  
         

  # LogicalID:
  #   Type: "AWS::Route53::RecordSet"
  #   Properties:
  #     AliasTarget:
  #       AliasTarget
  #     Comment: String
  #     Failover: String
  #     GeoLocation:
  #       GeoLocation
  #     HealthCheckId: String
  #     HostedZoneId: String
  #     HostedZoneName: String
  #     MultiValueAnswer: Boolean
  #     Name: String #required
  #     Region: String
  #     ResourceRecords:
  #       - String
  #     SetIdentifier: String
  #     TTL: String
  #     Type: String #required
  #     Weight: Integer

Outputs:
  WebsiteURL:
    Value: !GetAtt [MYBucket, WebsiteURL]
    Description: URL for website hosted on S3


  

  

  