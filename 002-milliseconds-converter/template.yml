AWSTemplateFormatVersion: 2010-09-09
Description: |
  Cloudformation temolate for miliseconds converter.
  
Resources:
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for ALB
      SecurityGroupEgress:
        - Egress
      SecurityGroupIngress:
        - IPProtocol: tcp 
          FromPort: 80 
          ToPort: 80 
          CidrIp: 0.0.0.0/0 
  Ec2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for App only from ALB
      SecurityGroupIngress:
        - IpProtocol: tcp 
          FromPort: 80 
          ToPort: 80 
          CidrIp: !GetAtt ALBSecurityGroup.GroupId 
  Ec2LaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        ImageId: ami-08f3d892de259504d 
        InstanceType: t2.micro 
        SecurityGroupIds:
          - !GetAtt Ec2SecurityGroup.GroupId 
        TagsSpecifications: 
          - ResourceType: instance 
            Tags: 
              Key: Name 
              Value: !Sub Web Server of ${AWS::StackName} Stack 
        UserData: 
          Fn::!Base64: | 
            #! /bin/bash 
            yum update -y 
            yum install python3 -y 
            pip3 install flask 
            wget -p https://raw.githubusercontent.com/ftmkrz/clarusway-aws-workshop/master/002-milliseconds-converter/templates/index.html 
            wget -p https://raw.githubusercontent.com/ftmkrz/clarusway-aws-workshop/master/002-milliseconds-converter/templates/result.html
            wget https://raw.githubusercontent.com/ftmkrz/clarusway-aws-workshop/master/002-milliseconds-converter/app.py
            python3 app.py  
  WebTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80 
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt Ec2SEcurityGroup.VpcId 
  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4
      Scheme: interten-facing
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets:
        - subnet-6128c607 
        - subnet-58ab5f79 
        - subnet-5e5f6260 
        - subnet-7bf14836 
        - subnet-5a51ba05
        - subnet-e72888e9
      Type: application 
  ALBLIstener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: #required
        - TargetGroupArn: !Ref WebTG
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  WebASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        - !GETAZs "" 
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref Ec2LT
      MaxSize: 3
      MinSize: 1
      TargetGroupARNs:
        - !Ref WebTG
Outputs: 
   WebsiteURL:
      Description: Miliseconds Converter Application Website URL
      Value: !GetAtt ApplicationLoadBalancer.PublicDnsName 